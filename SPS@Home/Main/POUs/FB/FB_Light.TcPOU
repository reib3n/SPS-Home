<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="FB_Light" Id="{cbe565c0-e88c-4ef6-9f99-30c174d48362}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_Light
VAR_INPUT
	bInputs			:	ARRAY[0..nSize] OF BOOL;	//Input Schalter oder Taster
	bInputsDoors	:	ARRAY[0..nSize] OF BOOL;	//Inputs for Door Contacts to put on light at Night
	bInputSec		:	BOOL := FALSE;				//Input für Security Schaltung
	bLightInv_NC	:	BOOL := FALSE;				//Ist das Licht invertiert? (NC)
	bAllFlanks		:	BOOL := FALSE;				//Alle Flanken verwenden?
	bSunIsDown		:	BOOL;
END_VAR
VAR_IN_OUT
	bInputHA		:	BOOL;						//Input (HA)
END_VAR
VAR_OUTPUT
	bOut			:	BOOL;
END_VAR
VAR CONSTANT
	nSize 			:	UINT := 5; 					//Maximale Anzahl Eingänge
END_VAR
VAR
	fbRtrig			:	ARRAY[0..nSize] OF R_TRIG;
	fbRtrigDoor		:	ARRAY[0..nSize] OF R_TRIG;
	fbFtrig			:	ARRAY[0..nSize] OF F_TRIG;
	Idx				:	UINT;
	bTrigger		:	BOOL;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF bInputSec THEN	//Dauerlicht bei Security Falls
	
	IF bLightInv_NC THEN
		bOut		:= FALSE;
		bInputHA	:= TRUE;
	ELSE
		bOut		:= TRUE;
		bInputHA	:= TRUE;
	END_IF
	
ELSE	//Normale Funktion
	bTrigger := FALSE;

	//Init alle Flankentrigger und Frage diese ab
	FOR Idx := 0 TO nSize DO
	
		//Alle R_Trig
		fbRtrig[Idx](CLK:= bInputs[Idx], Q=> );
		fbRtrigDoor[Idx](CLK:= bInputsDoors[Idx], Q=> );
		
		bTrigger := bTrigger OR fbRtrig[Idx].Q;
		
		IF bLightInv_NC THEN
			bTrigger := bTrigger OR (fbRtrigDoor[Idx].Q AND bSunIsDown AND bOut);
		ELSE
			bTrigger := bTrigger OR (fbRtrigDoor[Idx].Q AND bSunIsDown AND NOT bOut);
		END_IF
	
		IF bAllFlanks THEN //Wenn alle Flanken
			fbFtrig[Idx](CLK:= bInputs[Idx], Q=> );
			bTrigger := bTrigger OR fbFtrig[Idx].Q;
		END_IF
	
	END_FOR
	

	IF bLightInv_NC THEN	//Wenn Licht Invertiert
	
		IF bInputHA THEN
			bOut	:= FALSE;
		ELSE
			bOut	:= TRUE;
		END_IF

	ELSE					//Wenn Licht nicht Invertiert 
		IF bInputHA THEN
			bOut	:= TRUE;
		ELSE
			bOut	:= FALSE;
		END_IF

	END_IF

	IF bTrigger THEN //Wenn Flanke erkannt
		bOut 			:= NOT bOut;
	
		IF bLightInv_NC THEN
			bInputHA	:= NOT bOut;
		ELSE
			bInputHa	:= bOut;
		END_IF
	END_IF
END_IF


]]></ST>
    </Implementation>
    <LineIds Name="FB_Light">
      <LineId Id="198" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="244" Count="2" />
      <LineId Id="251" Count="0" />
      <LineId Id="248" Count="2" />
      <LineId Id="247" Count="0" />
      <LineId Id="199" Count="0" />
      <LineId Id="201" Count="0" />
      <LineId Id="203" Count="6" />
      <LineId Id="294" Count="1" />
      <LineId Id="210" Count="0" />
      <LineId Id="299" Count="1" />
      <LineId Id="303" Count="1" />
      <LineId Id="301" Count="1" />
      <LineId Id="211" Count="6" />
      <LineId Id="277" Count="0" />
      <LineId Id="218" Count="25" />
      <LineId Id="202" Count="0" />
      <LineId Id="200" Count="0" />
      <LineId Id="197" Count="0" />
      <LineId Id="94" Count="0" />
      <LineId Id="13" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>
<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.4">
  <POU Name="MAIN" Id="{d8fc0d68-0f10-47d6-941d-703010fae0a9}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	
	//WERKSTATT
	trigWerkstattTuer  : F_TRIG;
	
	//TÜRÖFFNER HAUSTÜRE
	trigRelais1 : R_TRIG;
	TON_HTUER	: TON;

	//ENVIRONMENT
	TON_ENV		: TON;
	bBlockENV	: BOOL := FALSE;
	
	//ZISTERNE
	valueZ 		: ARRAY [0..9] OF INT;
	xZ			: REAL := 0;
	counterZ1	: INT := 0;
	counterZ2	: INT;
	counterZ3	: INT := 0;
	
	//Wasserverbrauch
	trigWater	:	R_TRIG;
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//######################################################################################
//##------------------------------------ MAIN------- ---------------------------------##
//######################################################################################

sub_Light();
sub_Security();
sub_Access();
sub_Power();

//------------------------------------ÖFFNER HAUSTÜRE--------------------------------

//ÖFFNER LOGIK
trigRelais1(CLK := gvl_EA.bID24_01_2);
TON_HTUER(IN := gvl_HA.bHaustuerOeffnerImpuls, PT := T#5000MS);				//Timer für Impulsöffnung

IF gvl_HA.bHaustuerOeffnerDauer THEN

	gvl_EA.bOD04_5 := TRUE; //Haustür IMMER Offen
	gvl_HA.bHaustuerOeffnerImpuls := FALSE;

ELSE
	IF trigRelais1.Q THEN // Wenn Türöffner (Innenstation Relais 1 - Klingel)

		gvl_HA.bHaustuerOeffnerImpuls := TRUE;

	END_IF
	
	// Wird benötigt um Daueröffnung wieder aufzuheben.
	IF NOT gvl_HA.bHaustuerOeffnerDauer AND NOT gvl_HA.bHaustuerOeffnerImpuls THEN
		gvl_EA.bOD04_5 := FALSE; 	//Haustür zu
	END_IF
	
	IF gvl_HA.bHaustuerOeffnerImpuls THEN  // Wenn Impuls gewünscht
	
		gvl_EA.bOD04_5 := TRUE; // Öffne Tür
		//Starte Timer
		
		IF gvl_HA.bENV_NoDaylight THEN
			gvl_mb.Output_Coils[1] := TRUE;		// Beleuchtung Hausgang ein, wenn Dunkel	
		END_IF

	END_IF

	IF TON_HTUER.Q THEN
		gvl_HA.bHaustuerOeffnerImpuls := FALSE;
		gvl_EA.bOD04_5 := FALSE; // Schließe Tür
	END_IF
	
END_IF
//----------------------------------------------------------------------------------------

//-------------------------------------HEIZUNG--------------------------------------------

//Vitramo BAD OG
IF gvl_HA.bOD04_4 THEN
	gvl_EA.bOD04_4 := TRUE;
ELSE
	gvl_EA.bOD04_4 := gvl_EA.bID04_4;		//Steuerung über Heizung
END_IF

//----------------------------------------------------------------------------------------

//-------------------------------------WERKSTATT-------------------------------------------

// Automatisch Licht an Wenn Tür auf (Nachts)
trigWerkstattTuer(CLK := gvl_EA.bWID01_3);

IF gvl_HA.bENV_NoDaylight AND gvl_EA.bWOD01_1 AND trigWerkstattTuer.Q THEN
	gvl_mb.Output_Coils[6] := TRUE;
END_IF

gvl_EA.bWOD01_5 := FALSE;

//---------------------------------- ENVIRONMENT ----------------------------
TON_ENV(IN := bBlockENV, PT := T#60000MS);

IF NOT bBlockENV THEN
	//----------------------------------------------
	gvl_HA.iIAV01_1 := F_Convert10V2Temp(gvl_EA.iIAV01_1);		// Konvertiere Wohnzimmer Temperatur (0 - 50 °C)
	gvl_HA.iIAV01_2 := F_Convert10V2Hum(gvl_EA.iIAV01_2);		// Konvertiere Wohnzimmer Feuchtigkeit
	gvl_HA.iIAV01_3 := F_Convert10V2CO2(gvl_EA.iIAV01_3);		// Konvertiere Wohnzimmer CO2
	
	gvl_HA.iIAPT_01_1 := gvl_EA.iIAPT_01_1;						// Temperatur Bühne
	
	gvl_HA.iIAV01_4 := F_Convert10V2Temp2(gvl_EA.iIAV01_4);		// Konvertiere Technikraum Temperatur (-30 - +70 °C)
	gvl_HA.iIAV02_1 := F_Convert10V2Hum(gvl_EA.iIAV02_1);		// Konvertiere Technikraum Feuchtigkeit
	
	gvl_HA.iWIAV01_1 := F_Convert10V2Temp2(gvl_EA.iWIAV01_1);	// Konvertiere Wohnzimmer Temperatur (-30 - +70 °C)
	gvl_HA.iWIAV01_2 := F_Convert10V2Hum(gvl_EA.iWIAV01_2);		// Konvertiere Werkstatt Feuchtigkeit
	
	//---------------------------Zisterne Arithmetisches Mittel------------------------------
	IF counterZ1 < 10 THEN //Initiale Befüllung
		valueZ[counterZ1]  := gvl_EA.iIAA01_1;
		counterZ1 := counterZ1 + 1;
	ELSE
		xZ := 0;
		// Berechnung
		FOR counterZ2 := 0 TO 9 BY 1 DO
    		xZ := xZ + valueZ[counterZ2];
		END_FOR;
		
		xZ := xZ / 10;	//Mitteln
		counterZ3 := (counterZ3 + 1) MOD 10;
 		valueZ[counterZ3] := gvl_EA.iIAA01_1;
	END_IF
	
	gvl_HA.iIAA01_1 		:= REAL_TO_INT(xZ / 100); // Zisterne 4-20mA durch 100 geglättet
	gvl_HA.iIAA01_1_Proz 	:= F_ConvertZisterne_mA2Perc(gvl_HA.iIAA01_1);			// Zisterne %
	gvl_HA.iIAA01_1_Liter	:= F_ConvertZisterne_Perc2Liter(gvl_HA.iIAA01_1_Proz);	// Zisterne Liter
	
	//----------------------------------------------
	bBlockENV := TRUE;
END_IF

IF TON_ENV.Q THEN
	bBlockENV := FALSE;
END_IF

//---------------------------------------WASSERVERBRAUCH ZÄHLEN (1 = 10 Liter)--------------
trigWater(CLK := gvl_EA.bID24_03_3);

IF trigWater.Q THEN
	gvl_RETAIN.waterConsumption := gvl_RETAIN.waterConsumption + 1;
END_IF]]></ST>
    </Implementation>
    <LineIds Name="MAIN">
      <LineId Id="80" Count="3" />
      <LineId Id="860" Count="2" />
      <LineId Id="926" Count="0" />
      <LineId Id="335" Count="1" />
      <LineId Id="338" Count="39" />
      <LineId Id="385" Count="8" />
      <LineId Id="395" Count="3" />
      <LineId Id="408" Count="4" />
      <LineId Id="414" Count="1" />
      <LineId Id="429" Count="1" />
      <LineId Id="448" Count="50" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>